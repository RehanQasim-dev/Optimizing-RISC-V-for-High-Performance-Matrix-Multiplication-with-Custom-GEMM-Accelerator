#*****************************************************************************************
# Vivado (TM) v2018.2 (64-bit)
#
# project.tcl: Tcl script for re-creating project 'project_2'
#
# Generated by Vivado on Thu May 16 22:46:37 PKT 2024
# IP Build 2256618 on Thu Jun 14 22:10:49 MDT 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/systolic_setup.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Config.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/acum_buffer.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/gemm_decoder.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/accumulator.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Utilities/buffer.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Controller/Store_Controller.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Controller/Load_Ex_controller.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/systolic.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/systolic_setup_reverse.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Controller/buffer_accum_ctrl.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/memory_mapped.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/mac.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/memory.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/gemm_datapath.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/super_sys.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Utilities/muxes.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/pipeline_gen.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/gemm.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/soc.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/reg_file.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/mux_4x1.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/ALU.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/inst_mem.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/mux_2x1.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/x7segb8.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/flip_flop.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/branch_con.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/PC_flip.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/adder.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/cva6_csr_unit.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/hazard_unit.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/main_csr_pipe.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/mem_unit.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Datapath/extend.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Controller/flip_CU.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Controller/CPU.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/top.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/tff.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/test/banked_memory.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/test/bank.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/ICACHE.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory5.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory8.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory7.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory11.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory14.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory2.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory0.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory4.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory15.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory10.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory13.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory12.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory6.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory9.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory3.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Script/build/memory1.mem"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/pcore_csr_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/uart.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/pcore_config_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/uart_rx.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/uart_tx.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/cache_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/mmu_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/pcore_interface_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/ddr_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/c_ext_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/a_ext_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/spi_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/m_ext_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/plic_defs.svh"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart/uart_defs.svh"
#    "/home/abdul_waheed/Music/FYP/Vivado/Nexys-A7-100T-Master.xdc"
#    "/home/abdul_waheed/Music/rv32_for_fyp/main_csr_pipe_tb.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/tb_top.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/abdul_top_behav.wcfg"
#    "/home/abdul_waheed/Music/rv32_for_fyp/main_impl.wcfg"
#    "/home/abdul_waheed/Music/rv32_for_fyp/copy_main_csr_pipe_tb_func_imp.wcfg"
#    "/home/abdul_waheed/Music/rv32_for_fyp/main_csr_pipe_tb_func_impl.wcfg"
#    "/home/abdul_waheed/Music/rv32_for_fyp/Gemm/Datapath/memory_tb.sv"
#    "/home/abdul_waheed/Music/rv32_for_fyp/uart_look.wcfg"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir [file dirname [info script]]
# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "project_2"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "project.tcl"

# Help information for this script
proc help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/project_2"]"

# Create project
create_project ${_xil_proj_name_} $origin_dir/${_xil_proj_name_} -part xc7a100tcsg324-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.uses_pr" -value "1" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a100tcsg324-1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "DisplayOnly" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "113" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/Gemm/Datapath/systolic_setup.sv"] \
 [file normalize "${origin_dir}/Config.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/acum_buffer.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/gemm_decoder.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/accumulator.sv"] \
 [file normalize "${origin_dir}/Gemm/Utilities/buffer.sv"] \
 [file normalize "${origin_dir}/Gemm/Controller/Store_Controller.sv"] \
 [file normalize "${origin_dir}/Gemm/Controller/Load_Ex_controller.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/systolic.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/systolic_setup_reverse.sv"] \
 [file normalize "${origin_dir}/Gemm/Controller/buffer_accum_ctrl.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/memory_mapped.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/mac.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/memory.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/gemm_datapath.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/super_sys.sv"] \
 [file normalize "${origin_dir}/Gemm/Utilities/muxes.sv"] \
 [file normalize "${origin_dir}/Gemm/Datapath/pipeline_gen.sv"] \
 [file normalize "${origin_dir}/gemm.sv"] \
 [file normalize "${origin_dir}/soc.sv"] \
 [file normalize "${origin_dir}/Datapath/reg_file.sv"] \
 [file normalize "${origin_dir}/Datapath/mux_4x1.sv"] \
 [file normalize "${origin_dir}/Datapath/ALU.sv"] \
 [file normalize "${origin_dir}/Datapath/inst_mem.sv"] \
 [file normalize "${origin_dir}/Datapath/mux_2x1.sv"] \
 [file normalize "${origin_dir}/Datapath/x7segb8.sv"] \
 [file normalize "${origin_dir}/Datapath/flip_flop.sv"] \
 [file normalize "${origin_dir}/Datapath/branch_con.sv"] \
 [file normalize "${origin_dir}/Datapath/PC_flip.sv"] \
 [file normalize "${origin_dir}/Datapath/adder.sv"] \
 [file normalize "${origin_dir}/Datapath/cva6_csr_unit.sv"] \
 [file normalize "${origin_dir}/Datapath/hazard_unit.sv"] \
 [file normalize "${origin_dir}/Datapath/main_csr_pipe.sv"] \
 [file normalize "${origin_dir}/Datapath/mem_unit.sv"] \
 [file normalize "${origin_dir}/Datapath/extend.sv"] \
 [file normalize "${origin_dir}/Controller/flip_CU.sv"] \
 [file normalize "${origin_dir}/Controller/CPU.sv"] \
 [file normalize "${origin_dir}/top.sv"] \
 [file normalize "${origin_dir}/tff.sv"] \
 [file normalize "${origin_dir}/test/banked_memory.sv"] \
 [file normalize "${origin_dir}/test/bank.sv"] \
 [file normalize "${origin_dir}/Script/build/ICACHE.mem"] \
 [file normalize "${origin_dir}/Script/build/memory5.mem"] \
 [file normalize "${origin_dir}/Script/build/memory8.mem"] \
 [file normalize "${origin_dir}/Script/build/memory7.mem"] \
 [file normalize "${origin_dir}/Script/build/memory11.mem"] \
 [file normalize "${origin_dir}/Script/build/memory14.mem"] \
 [file normalize "${origin_dir}/Script/build/memory2.mem"] \
 [file normalize "${origin_dir}/Script/build/memory0.mem"] \
 [file normalize "${origin_dir}/Script/build/memory4.mem"] \
 [file normalize "${origin_dir}/Script/build/memory15.mem"] \
 [file normalize "${origin_dir}/Script/build/memory10.mem"] \
 [file normalize "${origin_dir}/Script/build/memory13.mem"] \
 [file normalize "${origin_dir}/Script/build/memory12.mem"] \
 [file normalize "${origin_dir}/Script/build/memory6.mem"] \
 [file normalize "${origin_dir}/Script/build/memory9.mem"] \
 [file normalize "${origin_dir}/Script/build/memory3.mem"] \
 [file normalize "${origin_dir}/Script/build/memory1.mem"] \
 [file normalize "${origin_dir}/uart/pcore_csr_defs.svh"] \
 [file normalize "${origin_dir}/uart/uart.sv"] \
 [file normalize "${origin_dir}/uart/pcore_config_defs.svh"] \
 [file normalize "${origin_dir}/uart/uart_rx.sv"] \
 [file normalize "${origin_dir}/uart/uart_tx.sv"] \
 [file normalize "${origin_dir}/uart/cache_defs.svh"] \
 [file normalize "${origin_dir}/uart/mmu_defs.svh"] \
 [file normalize "${origin_dir}/uart/pcore_interface_defs.svh"] \
 [file normalize "${origin_dir}/uart/ddr_defs.svh"] \
 [file normalize "${origin_dir}/uart/c_ext_defs.svh"] \
 [file normalize "${origin_dir}/uart/a_ext_defs.svh"] \
 [file normalize "${origin_dir}/uart/spi_defs.svh"] \
 [file normalize "${origin_dir}/uart/m_ext_defs.svh"] \
 [file normalize "${origin_dir}/uart/plic_defs.svh"] \
 [file normalize "${origin_dir}/uart/uart_defs.svh"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/Gemm/Datapath/systolic_setup.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Config.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/acum_buffer.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/gemm_decoder.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/accumulator.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Utilities/buffer.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Controller/Store_Controller.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Controller/Load_Ex_controller.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/systolic.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/systolic_setup_reverse.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Controller/buffer_accum_ctrl.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/memory_mapped.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/mac.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/memory.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/gemm_datapath.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/super_sys.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Utilities/muxes.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/pipeline_gen.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/gemm.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/soc.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/reg_file.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/mux_4x1.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/ALU.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/inst_mem.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/mux_2x1.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/x7segb8.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/flip_flop.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/branch_con.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/PC_flip.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/adder.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/cva6_csr_unit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/hazard_unit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/main_csr_pipe.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/mem_unit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Datapath/extend.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Controller/flip_CU.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Controller/CPU.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/top.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/tff.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/test/banked_memory.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/test/bank.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/Script/build/ICACHE.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory5.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory8.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory7.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory11.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory14.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory2.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory0.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory4.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory15.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory10.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory13.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory12.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory6.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory9.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory3.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/Script/build/memory1.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/uart/pcore_csr_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/uart.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/uart/pcore_config_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/uart_rx.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/uart/uart_tx.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/uart/cache_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/mmu_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/pcore_interface_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/ddr_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/c_ext_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/a_ext_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/spi_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/m_ext_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/plic_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/uart/uart_defs.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "soc" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../FYP/Vivado/Nexys-A7-100T-Master.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../FYP/Vivado/Nexys-A7-100T-Master.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/../FYP/Vivado/Nexys-A7-100T-Master.xdc"]" -objects $obj
set_property -name "target_part" -value "xc7a100tcsg324-1" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/../FYP/Vivado/Nexys-A7-100T-Master.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/main_csr_pipe_tb.sv"] \
 [file normalize "${origin_dir}/tb_top.sv"] \
 [file normalize "${origin_dir}/abdul_top_behav.wcfg"] \
 [file normalize "${origin_dir}/main_impl.wcfg"] \
 [file normalize "${origin_dir}/copy_main_csr_pipe_tb_func_imp.wcfg"] \
 [file normalize "${origin_dir}/main_csr_pipe_tb_func_impl.wcfg"] \
 [file normalize "${origin_dir}/Gemm/Datapath/memory_tb.sv"] \
 [file normalize "${origin_dir}/uart_look.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/main_csr_pipe_tb.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/tb_top.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/main_impl.wcfg"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/copy_main_csr_pipe_tb_func_imp.wcfg"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/main_csr_pipe_tb_func_impl.wcfg"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/Gemm/Datapath/memory_tb.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "main_csr_pipe_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7a100tcsg324-1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7a100tcsg324-1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
